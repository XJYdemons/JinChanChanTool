<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADiby0w3lsameJCEt3oNwv76DkM/elBD/3oaTv97oFZ/fB9Uf30rYX98biW/emc
        gf3ihXX94Hxu/eOGc/29e4j9UFTg/UNS/v1HX/79R2b//Uhp//1cgP/9s8j/+1Vz+N1IXvKZQlrZMAAA
        AAAAAAAAAAAAAAAAAAB6FA4Eojgneu2DMfXjVhj/6VgW/+lHEP/pQBH/7WpB/+10UP/tgmb/65yH/+F5
        c//dbGj/3W5q/95uaf/ecGz/3XJt/9pybf/RcG7/dGLA/0Rl/P9Haf//XoL//5Gp/v/8/f//a5T+/0dj
        /v9BZPv1QmHeej1FlgQAAAAAZzAlAGQQC3iSNxj76Ycn/+d+Jf/tei3/4Ugd/+RjRv/gYk//4G1l/+OH
        gf/ihYD/4oWA/+GCff/hhH//3oOA/9+Egf/agYD/2Ht5/9Z6eP/ceXL/e37W/2uM/v9OdP7/xdT+/+zw
        //9Lev//WID+/5Cq/v9mifz7SGfVeCgSJQDbdD0uczwy84AlD//wrjT/6ocy/8M5Fv/DRzn/32FU/99v
        af/ih4H/5ZaS/+aYlP/loqD/5aWk/+SioP/jnJr/5J+e/9+Xl//ci4r/24aE/9uMjP/Kg43/kJng/6C4
        /v/V4v7/1eD+/6nB/v/Y5v3/0d/+/3+d/v9TgPjzRVqtLrYgC5XOZk7/yHZJ/+BuMf/fViD/uzkU/7dK
        Q//fcmz/44yI/+Sgnv/lp6b/5rCw/+e5u//pwcP/6L2//+e5uv/mtrb/5rKy/+Ompv/cnJ7/3JaY/92Y
        mP+uia7/mbH7//X4///q8f7/mrX+/3am/v9im/7/T3v//1qL/v9Wf9SVpxcL26wYDf/orY7/7JNP/9JL
        Iv+8ORL/uFFN/+OMh//lqKf/5bOy/+e7u//owcT/6snO/+vN0//ry9L/6szS/+jIzP/mw8X/5rq7/+G0
        tv/cqa//gJLj/46t+P+Xo+H/i6Hp//D1/v/R3f7/dqP//16f/v9gmf7/YJn//2CY4NugFAv7siMP/+mJ
        IP/vg0H/2l8q/782Ev+YQT//5aGg/+e7vP/qxsr/68rQ/+zT3P/s2OD/7Nff/+za4v/s2uH/69jh/+zT
        2//rytD/6sTH/+a5vP+9obv/yJip/9iJh/+Yh7D/vNT+/8/e/v/3+v7/utH+/2+v/v9prf7/ba/r+5kd
        EP3JVxz/6WkX/+yHKf/vozP/2auK/3EnJP/nsbH/683U/+3V3v/s3OT/7OLq/+7k6//t4+r/7OHp/+zh
        6P/t4ej/7Nzl/+3U3f/t0Nj/jper/6SJl//en6H/tWVl/1o2Sv+vz/r/lsD7/6rO8v/7/f//1er+/3fD
        /f98x/f9oikS/d15Jf/qfxn/8KYs/8iNPv9EGhb/VQkH/9Ggmv/v1t//8uDp/+/l7P/y6vD/8erw//Dq
        8P/w6e//8efu//Ll7P/04uv/897n/+fW3v9YcpP/a3uY/4lMVP9LFhn/NgwQ/2yHsf9vjKj/ckBI/5Sw
        vv+ZnqX/j5yq/37R+/21Rhz933sj//ChHv++dhX/Qw8J/2YWFf+GJST/rG5t//nn7//36fH/9evx//Xs
        8v/17fP/9u3z//Xt8//07PL/9+rx//jm7v/34uv/9ubt/3CCoP9xmLH/aUFJ/0ERFP9EFRf/URcc/2Ae
        If+QPjz/jCIT/7YyEP/FMBL/u3Fn/cVeIf3khx//0JIf/zMNCf97Ih//kTk7/4ErKv9mIB//wKKp//Xk
        7P/66fH/+O70//nv9P/47vT/+O3z//ft8//56/L/+unx//nl7f/55e3/4tPd/4DD1/9kgpz/XyUp/28w
        Nf9hJCv/eiwv/71eU/+tNRb/wToT/99BEv/qOgz90HUs/eqWHf9WKQ7/ahoX/5IvLP97IR7/bCEc/5JU
        Tf9+TU//7Nbe//nn7//67PP/++zz//vt8//66/P/+ezz//rr8v/76/L/+unw//nl7f/34ef/fGNy/4KL
        mv+kUVT/aC00/2QpMP9yLjL/v1lQ/6UvE/++OBP/30UU//BuOP3Xeif9x3sc/0sMC/9kHBv/bR8f/10h
        Jf+nVU3/onZ1/7SRk//44er/+OTt//rn7//55u7/9uDn//PX1//34un/+ujv//ro8P/66PD/+ubt/+nX
        3f93UVj/lW10/6VNT/9vLjT/YCQq/5E/Pf+XMSL/mycS/706FP/ZTxv/52tA/dh5Jf3fnjb/qj01/6BC
        P/+OTlD/pWRl/7d0bP/TxsX/5M3M//nl7f/66O//9+Pr//LY3//BpLj/Y2Cy/7SmzP/44en/9+Pr//jk
        7P/55e3/5tPY/1tFU/+XiZb/dmN2/3J1gf90V2L/RS5B/10XF/+AJBr/jExT/4I5Q/+lKRH92XAl/fGl
        G//ot2n/3quf/8+Ee/+jZGD/ybWx/93Kyf/r2uL/6d3k//np8P/03uf/zK3D/y83tP9PW9D/MF3C/9fV
        5f/44+z/+OPs//bh6v/r09v/dV9p/3t1hv+BfI7/msfX/8fm9P9kkbL/T3aY/1eHrv9qhqv/P22e/3RK
        UP3XZiX98aoc//W2I//0457/07Sp/7FkVf+vhYL/17zF/39NbP82HCn/opGY/+va4v9DPZ//Cwph/xUZ
        iP8SEob/jrDm//vo7v/55Oz/9uDp//Hc5P+mj5X/maCw/2xjdP+CdYT/t9zo/22lyv9dtN3/gKLE/1GR
        vv9Kirj/S4ez/dBQH/3tkyL/9LYy//zlif/grX7/nFRI/7CCgv+ri5z/ORgg/ycPFP9BJzD/zsbS/yRh
        u/8wW5j/Iits/xAXd/9lf8X//O/0/+vk6v/DvMH/2M/W/9jFyf/Kztb/dXyQ/4CKof9uiaD/Ycvx/4e3
        2v9Mhbf/bm2B/2Gfxv9FjLz9xEEb/ep8Jv/zsjz/+tp6/9yoff9zNjr/rn99/4RcW/9IHCD/YjQ7/1Iw
        O//Uwcj/X6jj/13a/f+s7fr/b9b1/7bn+v/Qws7/UTpQ/xYHC/8oIC//rqy7/7ejqv+6vcv/eJKu/4Gw
        yP+l4PD/Zo2u/1Khz/9WcI7/cI2l/0ybyf28LBP95m8o//KgPv/31Iz/3r6a/28yN/+YYGH/tomG/zkW
        Hv+IanP/j294/+rO1v/bydX/jsnj/4fc9/+15vv/8/Lz/3hceP8gDhT/EAUJ/yYcLv9kWmv/v6Wr/7Oh
        p/+OmK7/qMrb/3XK6f9JmsP/a529/1elz/9kP07/U6TM/bYaCv3aWSr/8IIo//bPjf/p1bj/dTw8/1kn
        Kv/Zqaz/sX6C/4VTWP++mZ7/1bC2/7WSmv+Tj6f/59ng//3z9//k3N7/UTRF/yIOFP9PJir/Z0ZT/5Ru
        eP/DrLL/hniG/5aYq/+K1e7/QZK+/3bT6f9be5z/WbXg/0KAsf9VrtX9tBsL/cc9Gv/oayj/87Zw//Xd
        sP+SWlL/Wi83/3lFR/+DWF7/jWJo/4tmbv98Xmf/i3+M/3WmyP9df6X/x8TO//Xs7/9tTFX/KBIZ/7Cb
        ov+GZHL/zbq//5+Cjf+XkaH/n5qq/4jY6/9Pn8T/d9Hs/0tzmv9kq8n/Uq/c/1q84/3AKQ/9uiQN/9dZ
        Kv/vjy7/89Gc/6BoXf9gQE3/WjA5/0gxQP9JM0P/bExW/39aYf90W2r/eIml/1+Ksf9egaT/iIyp/7ma
        pv+HZW3/hGVs/8mvtv/o0df/XUZV/7zC0P+dl6b/mODp/1y+2f9csdj/TaHL/2B3jv9gyvD/XL/p/cYs
        D/2zIQ3/xzoZ/+R6Lf/wsU//oGxg/3FNVv9cMz3/XEBN/35bYv+HYmr/gVtj/1Jnif91cIb/hIab/2Vv
        iP9abor/eJi5/42Np/+giJj/nYOO/2FAUv9HR1z/0Njl/7Cnrf+k7vb/Ycvr/1Oiyf9w1/T/ZMXm/3TR
        9P930fD9rR0M/bw1Ff+7KRH/0FIk/+qgL/9/Ukf/YUhU/1s+Sv92VF//ooWL/7CQlf+GbHb/LmiZ/2Nz
        kf+TjJ3/qKW0/4eCkP94jaj/haC6/5Kds/+usb//mqGx/7a/y//GydT/2dLJ/6vq9v982/f/cMzp/4rl
        +/+D2/f/mOD2/5/u9v2dFwv9qCsR/7E0E//CORj/2WAq/6dpN/+ln63/s5eR/5JjZP+pkpj/rpyl/0tA
        VP87f7T/S2+Z/6KbqP+ztML/09Xe/62tuv+bpbr/l5an/7/AzP/Y3eX/5ez2/7y7xf/69Nj/yPH0/8P3
        /v+a7/3/luX6/7Tu/P/N+Pf/xn1e/ZweEfuSGAz/pi4S/7I8FP/EQhv/2F8q/62Hev/SvKD/yrCR/3df
        a/99eo//VF9+/2ao0/9ekr7/e4uj/8/T3v/h4ej/7u/y//H19//08/f/8Onw/+fe3//h3OP/1c3E//rp
        z//o8PT/5vr+/531/f+r9f3/s+7v/+SOZv+9Ohb7hhwQ240bD/+EGhD/pTcW/75HF//GPhn/3msx/+mP
        Pf/yumf/uJB4/7+kq/+Zhan/5fD3/9bq+P/J2OP/087U/+rl5f/29Of/9uvY//Dgzf/Svrj/38/U/97Z
        4P/qzrX/9NvG/+zs8//Z+/7/sPr+/6/j3//rk2n/31so/40XDNubJhGVfRkP/38dEP+CHxD/tE4d/9Bl
        Hv/GNhT/21kr/+d8M//ngjf/qIJ//56Sqv/Q5/b/2Ofv/+vp6//27+T/++i5//zmrf/85aD/+92N/9Oj
        cP/SvsX/49LJ//bavf/rrp3/1q+//+fe6//i1tr/8qeP/+N4Vv+qKx7/cBULlbM9FS6oJRHzfBoQ/4Ae
        EP+AHQ//pEUY/9x9Iv/LOxL/zzMW/9l2Qf+geXH/qZWd/7ne6v/c2+D/6N/d//bLcf/1vE3/8rZF//Gy
        PP/xrjr/059m/92/rP/qoHL/3WxE/9FoX//PgHr/5aee/+qsq//TgX7/qEFG/5AmH/NMCwcudB4PALgq
        EnisJRH7fBoP/34cEP+AHA//kiwS/9BxIf/TVxj/tV1L/2VCSf+Uc3z/u83W/+bb2f/Tw8L/xama/+uX
        Tf/rlkX/6pRR/+qFVP/lc0H/3Fwq/9dYKf/UWy3/1nA+/9qCXf/demz/xWVm/6VIVf+WNjz7dh0eeCAC
        AQAAAAAAkBoOBMIpEHq5LRHzhB0Q/30bEP+EGg//jRwQ/6w4E//LTh3/dkZG/39TXf/XxMD/4djV/9vN
        yv/Qxsn/1GBG/9RAG//QRB7/0kwi/9JPJf/TTyX/1GAo/85jMv++Ti3/xV05/6xEQf+bOD3/iy8w83gh
        InpQDAsEAAAAAAAAAAAAAAAAAAAAAKooES65LRKZkiER3YUZD/uOGA39lxgL/Z4VCv2lNSX9aENN/c+y
        rP3TwLv908fH/dJ3Zv3SMxL90jcV/c8+G/3OQx79zEQh/cRDJ/25PCj9ukAq/bA+If2XIxT7iSEc3X0g
        IplqFhQuAAAAAAAAAAAAAAAA8AAAD+AAAAfAAAADgAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAIAAAAHAAAAD4AAAB/AAAA8=
</value>
  </data>
</root>